#!/usr/bin/env python3


import os
import shutil
import uuid
from contextlib import contextmanager
from tempfile import gettempdir
from bank_wrangler import fileio


@contextmanager
def _uncreated_tempdir():
    path = os.path.join(gettempdir(), uuid.uuid4().hex)
    yield path
    try:
        shutil.rmtree(path)
    except FileNotFoundError:
        pass


def test_initialize():
    with _uncreated_tempdir() as dirpath:
        fio = fileio.FileIO(dirpath)
        fio.initialize(empty_vault=b'does not matter')
        assert fio.is_initialized()


def test_forgot_initialize():
    with _uncreated_tempdir() as dirpath:
        fio = fileio.FileIO(dirpath)
        assert not fio.is_initialized()


def test_write_report():
    with _uncreated_tempdir() as dirpath:
        fio = fileio.FileIO(dirpath)
        fio.initialize(empty_vault=b'does not matter')
        fio.write_report({
            'a': 'this is some text',
            'b': 'some other text',
        })
        with open(os.path.join(dirpath, 'report', 'a')) as f1:
            assert 'this is some text' == f1.read()
        with open(os.path.join(dirpath, 'report', 'b')) as f2:
            assert 'some other text' == f2.read()


def test_call(func):
    try:
        func()
    except AssertionError:
        print('FAIL', func.__name__)
    else:
        print('OK', func.__name__)


if __name__ == '__main__':
    print('these tests performs real file io (in temp dirs)')
    if input('continue? [Y/n] ').upper() != 'Y':
        print('canceled')
    else:
        test_call(test_initialize)
        test_call(test_forgot_initialize)
        test_call(test_write_report)
